  'cson2json': '
    sed -E "s/#ECMASCRIPT#/es5/g" package-scripts-bundle.cson > tmp-bundle.cson &&
    sed -E "s/#ECMASCRIPT#/es6-es2015/g" package-scripts-bundle.cson >> tmp-bundle.cson &&
    sed -E "s/#ECMASCRIPT#/es7-es2016/g" package-scripts-bundle.cson >> tmp-bundle.cson &&
    sed -E "s/#ECMASCRIPT#/es8-es2017/g" package-scripts-bundle.cson >> tmp-bundle.cson &&
    sed -E "s/#ECMASCRIPT#/es5/g" package-scripts-build.cson > tmp-build.cson &&
    sed -E "s/#ECMASCRIPT#/es6-es2015/g" package-scripts-build.cson >> tmp-build.cson &&
    sed -E "s/#ECMASCRIPT#/es7-es2016/g" package-scripts-build.cson >> tmp-build.cson &&
    sed -E "s/#ECMASCRIPT#/es8-es2017/g" package-scripts-build.cson >> tmp-build.cson &&
    json -I -f package.json -e "this.scripts=$(cat package-scripts.cson tmp-build.cson tmp-bundle.cson | node node_modules/cson/bin/cson2json)" &&
    rimraf tmp-*.cson
  '

  'copydist': '
    cpy "./dist/**/*" ../r2-navigator-js/node_modules/r2-streamer-js/ --cwd=./ --parents --no-dir &&
    cpy "./dist/**/*" ../r2-testapp-js/node_modules/r2-streamer-js/ --cwd=./ --parents --no-dir
  '

  'quick-build-dist': '
    npm run transpile:typescript:es8-es2017+afterdist &&
    npm run copydist
  '

  '_pregitdist': '
    npm run build:all
  '

  'gitdist': '
    cd ../r2-streamer-js-dist/ &&
    git checkout -B develop &&
    (git pull || echo "pull") &&
    (git --no-pager status || echo status) &&
    ((rimraf "*" && echo rimrafOK) || echo rimrafNOK) &&
    cpy ../r2-streamer-js/package.json . &&
    cpy ../r2-streamer-js/package-lock.json . &&
    cpy ../r2-streamer-js/LICENSE . &&
    cpy ../r2-streamer-js/README.md . &&
    cpy "./docs/**/*" ../r2-streamer-js-dist/ --cwd=../r2-streamer-js/ --parents --no-dir &&
    cpy "./dist/**/*" ../r2-streamer-js-dist/ --cwd=../r2-streamer-js/ --parents --no-dir &&
    (git add * || echo add) &&
    (git commit -a -m "add new dist" || echo commit) &&
    (git push --set-upstream origin develop || echo push) &&
    (git --no-pager status || echo status) &&
    cd ../r2-streamer-js
  '

  'start': '
    cross-env DEBUG=r2:*
    node
    "./dist/es6-es2015/src/http/server-cli.js"
    ./misc/epubs/
  '

  'prepare_': '
    npm run build:all &&
    npm test
  '

  'prepublish_': '
    npm run prepare_
  '

  'prenow': '
    npm run clean &&
    npm run build:es8-es2017
  '

  'now': '
    cpy ./package-lock.json ./now &&
    cpy "./**/*" ../now/ --cwd=./dist --parents &&
    rimraf "./now/**/*.d.ts" &&
    rimraf "./now/**/*.js.map" &&
    cpy "./misc/readers/reader-NYPL/**/*" ./now/ --cwd=./ --parents --no-dir &&
    cpy "./misc/readers/reader-HADRIEN/**/*" ./now/ --cwd=./ --parents --no-dir &&
    cpy "./misc/epubs/*.epub" now/misc/epubs/ &&
    cpy ./package-now.json now/ &&
    cd now/ &&
    mv package-now.json package.json &&
    now &&
    cd ..
  '

  'typescript:imports': '
    node tools/typescript_relativize_path_mapping_imports.js
  '

  'gitrev': '
    node tools/gitrev.js &&
    cat dist/gitrev.json
  '

  'afterdist': '
    npm run typescript:imports &&
    npm run gitrev
  '

  'bundle:all': '
    npm run bundle:es5 &&
    npm run bundle:es6-es2015 &&
    npm run bundle:es7-es2016 &&
    npm run bundle:es8-es2017
  '

  'prebuild': '
    npm run lint
  '

  'build': '
    npm run transpile:typescript
  '

  'postbuild': '
    npm run afterdist &&
    npm run bundle:es8-es2017
  '

  'prebuild:all': '
    npm run lint
  '

  'build:all': '
    npm run transpile:typescript:all
  '

  'postbuild:all': '
    npm run afterdist &&
    npm run bundle:all
  '

  'clean': '
    rimraf ./dist &&
    rimraf ./now &&
    mkdirp ./dist
  '

  'lint': '
    npm run lint:all &&
    npm run lint:typescript:full
  '

  'lint:all': '
    eclint
      check
      "**/*"
      "!**/*.node"
      "!.git/**/*"
      "!node_modules*/**/*"
      "!dist/**/*"
      "!misc/**/*"
      "!now/**/*"
      "!.vscode/**/*"
      "!.history/**/*"
      "!**/.DS_Store"
      "!**/*.epub"
      "!**/*.cbz"
      "!**/*.jpg"
      "!**/*.jpeg"
      "!**/*.png"
      "!**/*.log"
  '

  'lint:typescript': '
    tslint
      -c
      "./tslint.json"
      "./src/**/*.ts"
      "./test/**/*.ts"
  '

  'lint:typescript:full': '
    tslint
      --project
      "./tsconfig.json"
      -c
      "./tslint.json"
      "./src/**/*.ts"
      "./test/**/*.ts"
  '

  'lintfix': '
    sed
      -i
      ""
      "s/let normalizedPath = path\\\\.normalize(documentPath);/let normalizedPath = path.normalize(documentPath).toLowerCase();/g"
      ./node_modules/tslint-language-service/out/src/index.js
  '

  'pretranspile:typescript': '
    npm run clean
  '

  'transpile:typescript': '
    tsc --pretty -p "./tsconfig.json"
  '

  'pretranspile:typescript:all': '
    npm run clean
  '

  'transpile:typescript:all': '
    npm run transpile:typescript:es5 &&
    npm run transpile:typescript:es6-es2015 &&
    npm run transpile:typescript:es7-es2016 &&
    npm run transpile:typescript:es8-es2017
  '

  'transpile:typescript:es8-es2017+afterdist': '
    npm run transpile:typescript:es8-es2017 &&
    npm run afterdist
  '

  'transpile:typescript:single': '
    node tools/typescript_compile_single.js
  '

  'posttranspile:typescript:single': '
    npm run afterdist
  '

  'server-bundle': '
    node "./dist/bundle-es8-es2017/server-cli.js"
  '

  'server-bundle-debug': '
    cross-env DEBUG=r2:*
    npm run server-bundle
  '

  'server-bundle-debug-x': '
    cross-env DEBUG=*
    npm run server-bundle
  '

  'server-bundlemin': '
    node "./dist/bundle-es8-es2017/server-cli.min.js"
  '

  'server-bundlemin-debug': '
    cross-env DEBUG=r2:*
    npm run server-bundlemin
  '

  'server-bundlemin-debug-x': '
    cross-env DEBUG=*
    npm run server-bundlemin
  '

  'server': '
    node "./dist/es8-es2017/src/http/server-cli.js"
  '

  'server-debug': '
    cross-env DEBUG=r2:*
    npm run server
  '

  'server-debug-x': '
    cross-env DEBUG=*
    npm run server
  '

  'server-https-debug': '
    cross-env DEBUG=r2:* PORT=443
    npm run server
  '

  'server-https-debug-x': '
    cross-env DEBUG=* PORT=443
    npm run server
  '

  'heroku-prebuild': '
    echo "heroku-prebuild"
  '

  'heroku-postbuild': '
    echo "heroku-postbuild" &&
    npm run clean &&
    npm run transpile:typescript:es8-es2017 &&
    npm run typescript:imports &&
    curl
      -s
      -o ./dist/gitrev.json
      https://raw.githubusercontent.com/readium/r2-streamer-js-dist/develop/dist/gitrev.json &&
    ls ./dist &&
    cat ./dist/gitrev.json
  '
# https://rawgit.com/readium/r2-streamer-js-dist/develop/dist/gitrev.json
